{"version":3,"file":"static/js/645.f5912317.chunk.js","mappings":"+MAgIA,UApHA,WAAsB,IAAD,EACXA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAejB,OAdAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,QACW,CACPC,OAAQ,MACRC,IAAI,SAAD,OAAWZ,EAAX,+CAEJa,MAAK,SAAAC,GAAG,OAAIV,EAAaU,EAAIC,SAChCL,EAAAA,EAAAA,QACW,CACPC,OAAQ,MACRC,IAAI,SAAD,OAAWZ,EAAX,uDAEJa,MAAK,SAAAC,GAAG,OAAIR,EAAYQ,EAAIC,WAC9B,CAACf,IAEFG,IACE,+BACE,iBAAKa,UAAU,kDAAf,WACE,gBAAKA,UAAU,MAAf,UACE,gBACEA,UAAU,2BACVC,IAAG,yCAAoCd,EAAUe,eACjDC,IAAKhB,EAAUiB,WAGnB,iBAAKJ,UAAU,iBAAf,WACE,eAAIA,UAAU,aAAd,SAA4Bb,EAAUiB,SACtC,eAAIJ,UAAU,eAAd,SAA8Bb,EAAUkB,WACxC,iBAAKL,UAAU,iCAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,SAAC,IAAD,CACEM,MAAO,EACPC,MAAOpB,EAAUqB,aAAe,EAChCC,KAAM,GACNC,YAAY,UAEd,cAAGV,UAAU,eAAb,SAA6Bb,EAAUqB,mBAEzC,iBAAKR,UAAU,kBAAf,iBACGb,QADH,IACGA,GADH,UACGA,EAAWwB,wBADd,aACG,EAA6BC,KAAI,SAAAC,GAAQ,OACxCA,EAASC,KAAKC,iBAFlB,IAII5B,EAAU6B,QAJd,QAKG7B,EAAU8B,aAAaC,MAAM,cAGlC,eAAIlB,UAAU,YAAd,0BACA,eAAIA,UAAU,kBAAd,SACGb,EAAUgC,OAAOP,KAAI,SAAAQ,GAAC,OACrB,gBAAIpB,UAAU,iCAAd,WACE,SAAC,MAAD,CAAoBA,UAAU,UAC9B,cAAGA,UAAU,WAAb,SAAyBoB,EAAEN,SAFuBM,EAAEpC,UAM1D,eAAIgB,UAAU,YAAd,4BACA,cAAGA,UAAU,kBAAb,SAAgCb,EAAUkC,YAE1C,eAAIrB,UAAU,YAAd,wBACA,gBAAKA,UAAU,SAAf,SACGX,GACCA,EAASiC,KACNC,QAAO,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KACrBb,KAAI,SAAAY,GAAC,OACJ,gBACExB,UAAU,2BACVC,IAAG,yCAAoCuB,EAAEE,cACzCvB,IAAKqB,EAAEV,MACFU,EAAExC,UAIjB,iBAAKgB,UAAU,sCAAf,WACE,cAAG2B,KAAMxC,EAAUyC,SAAUC,OAAO,SAASC,IAAI,aAAjD,UACE,UAAC,IAAD,CAAKC,aAAa,yCAAlB,sBACU,SAAC,MAAD,UAIZ,cACEJ,KAAI,qCAAgCxC,EAAU6C,QAA1C,kCACJH,OAAO,SACPC,IAAI,aAHN,UAKE,UAAC,IAAD,CAAKC,aAAa,yCAAlB,mBACO,SAAC,MAAD,UAGT,cACEJ,KAAI,qCAAgCxC,EAAU6C,QAA1C,kCACJH,OAAO,SACPC,IAAI,aAHN,UAKE,UAAC,IAAD,CAAKC,aAAa,yCAAlB,sBACU,SAAC,MAAD,UAGZ,UAAC,IAAD,CACEA,aAAa,iCACbE,YAAa,kBAAM1C,GAAU,IAF/B,WAIE,SAAC,MAAD,IAJF","sources":["pages/MovieInfo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactStars from 'react-rating-stars-component';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n  BsRecordCircleFill,\n  BsArrowLeftShort,\n  BsLink45Deg,\n} from 'react-icons/bs';\nimport { FaImdb, FaPlay } from 'react-icons/fa';\nimport Btn from '../components/Btn';\nimport { moviesInstance } from '../utilities/movieInstance';\n\nfunction MovieInfo() {\n  const { id } = useParams();\n  const [movieInfo, setMovieInfo] = useState(false);\n  const [castInfo, setCastInfo] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    moviesInstance\n      .request({\n        method: 'GET',\n        url: `movie/${id}?api_key=6acbd1e77111f3ead9c9bba49d78ba9f`,\n      })\n      .then(res => setMovieInfo(res.data));\n    moviesInstance\n      .request({\n        method: 'GET',\n        url: `movie/${id}/credits?api_key=6acbd1e77111f3ead9c9bba49d78ba9f`,\n      })\n      .then(res => setCastInfo(res.data));\n  }, [id]);\n  return (\n    movieInfo && (\n      <>\n        <div className='row row-cols-lg-2 row-cols-md-1 row-cols-1 mt-3'>\n          <div className='col'>\n            <img\n              className='movie-info-img rounded-3'\n              src={`https://image.tmdb.org/t/p/w780${movieInfo.backdrop_path}`}\n              alt={movieInfo.title}\n            />\n          </div>\n          <div className='col text-start'>\n            <h2 className='fw-lighter'>{movieInfo.title}</h2>\n            <h3 className='fs-5 fw-bold'>{movieInfo.tagline}</h3>\n            <div className='d-flex justify-content-between'>\n              <div className='d-flex align-items-center'>\n                <ReactStars\n                  count={5}\n                  value={movieInfo.vote_average / 2}\n                  size={24}\n                  activeColor='#000'\n                />\n                <p className='ms-3 my-auto'>{movieInfo.vote_average}</p>\n              </div>\n              <div className='movie-info-date'>\n                {movieInfo?.spoken_languages?.map(language =>\n                  language.name.toUpperCase()\n                )}\n                /{movieInfo.runtime} min/\n                {movieInfo.release_date.match(/\\d+/)}\n              </div>\n            </div>\n            <h2 className='mt-3 fs-5'> the genres</h2>\n            <ul className='d-flex fs-6 p-0'>\n              {movieInfo.genres.map(g => (\n                <li className='d-flex align-items-center mt-2' key={g.id}>\n                  <BsRecordCircleFill className='ms-2' />\n                  <p className='m-0 ms-2'>{g.name}</p>\n                </li>\n              ))}\n            </ul>\n            <h2 className='mt-3 fs-5'> THE SYNOPSIS</h2>\n            <p className='fs-6 fw-lighter'>{movieInfo.overview}</p>\n\n            <h2 className='mt-3 fs-5'> THE CAST</h2>\n            <div className='d-flex'>\n              {castInfo &&\n                castInfo.cast\n                  .filter((c, i) => i < 5)\n                  .map(c => (\n                    <img\n                      className='movie-cast-info-img me-4'\n                      src={`https://image.tmdb.org/t/p/w780${c.profile_path}`}\n                      alt={c.name}\n                      key={c.id}\n                    />\n                  ))}\n            </div>\n            <div className='d-flex justify-content-between my-4'>\n              <a href={movieInfo.homepage} target='_blank' rel='noreferrer'>\n                <Btn btnClassName='btn btn-outline-dark rounded-pill me-0'>\n                  Website <BsLink45Deg />\n                </Btn>\n              </a>\n\n              <a\n                href={`https://www.imdb.com/title/${movieInfo.imdb_id}/?ref_=hm_fanfav_tt_i_1_pd_fp1`}\n                target='_blank'\n                rel='noreferrer'\n              >\n                <Btn btnClassName='btn btn-outline-dark rounded-pill me-0'>\n                  imdb <FaImdb />\n                </Btn>\n              </a>\n              <a\n                href={`https://www.imdb.com/title/${movieInfo.imdb_id}/?ref_=hm_fanfav_tt_i_1_pd_fp1`}\n                target='_blank'\n                rel='noreferrer'\n              >\n                <Btn btnClassName='btn btn-outline-dark rounded-pill me-0'>\n                  Trailer <FaPlay />\n                </Btn>\n              </a>\n              <Btn\n                btnClassName='btn btn-dark rounded-pill me-0'\n                handleClick={() => navigate(-1)}\n              >\n                <BsArrowLeftShort /> Back\n              </Btn>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  );\n}\n\nexport default MovieInfo;\n"],"names":["id","useParams","useState","movieInfo","setMovieInfo","castInfo","setCastInfo","navigate","useNavigate","useEffect","moviesInstance","method","url","then","res","data","className","src","backdrop_path","alt","title","tagline","count","value","vote_average","size","activeColor","spoken_languages","map","language","name","toUpperCase","runtime","release_date","match","genres","g","overview","cast","filter","c","i","profile_path","href","homepage","target","rel","btnClassName","imdb_id","handleClick"],"sourceRoot":""}