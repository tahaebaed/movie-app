{"version":3,"file":"static/js/645.29a80490.chunk.js","mappings":"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","sources":["pages/MovieInfo.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport ReactStars from 'react-rating-stars-component'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport {\n  BsRecordCircleFill,\n  BsArrowLeftShort,\n  BsLink45Deg,\n  BsHeart,\n  BsHeartFill,\n} from 'react-icons/bs'\nimport { FaImdb, FaPlay } from 'react-icons/fa'\nimport Btn from '../components/Btn'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport {\n  handleAddToWatchList,\n  handlerRemoveToWatchList,\n} from '../store/watchList.js/actions'\nimport CallAPi from '../utilities/queryAPI'\nimport { LocaleContext } from '../lang/LocalizationProvider'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\nconst MovieInfo = () => {\n  const { id } = useParams()\n  const { locale } = useContext(LocaleContext)\n  const intl = useIntl()\n  const { data: movieDetails, isLoading: movieDetailsLoading } = CallAPi({\n    QueryName: 'movie info',\n    watchers: [id, locale],\n    refetchOnWindowFocus: false,\n    axios: true,\n    method: 'GET',\n    url: `movie/${id}?api_key=6acbd1e77111f3ead9c9bba49d78ba9f&language=${locale}`,\n  })\n\n  const { data: castDetails } = CallAPi({\n    QueryName: 'cast info',\n    watchers: [id, locale],\n    refetchOnWindowFocus: false,\n    axios: true,\n    method: 'GET',\n    url: `movie/${id}/credits?api_key=6acbd1e77111f3ead9c9bba49d78ba9f&language=${locale}`,\n  })\n  const arTextEnd = locale === 'ar' ? 'text-end' : ''\n  const arJustifyEnd = locale === 'ar' ? 'justify-content-end' : ''\n  const navigate = useNavigate()\n  const watchList = useSelector(state => state.watchList)\n  const dispatch = useDispatch()\n\n  const filtered = watchList.filter(mov => mov.id === movieDetails?.data.id)\n\n  return movieDetailsLoading ? (\n    <FormattedMessage id='loading' defaultMessage='loading' />\n  ) : (\n    <>\n      <div className='row row-cols-lg-2 row-cols-md-1 row-cols-1 mt-3'>\n        <div className='col'>\n          <img\n            className='movie-info-img rounded-3 mb-3'\n            src={`https://image.tmdb.org/t/p/w780${movieDetails.data.backdrop_path}`}\n            alt={movieDetails.data.title}\n          />\n        </div>\n        <div className='col text-start'>\n          <div className='d-flex justify-content-between my-3 align-items-center'>\n            <h2 className='fw-lighter'>{movieDetails.data.title}</h2>\n            {filtered?.length === 1 ? (\n              <Btn\n                btnClassName='bg-transparent border-0 info-favorite text-danger'\n                handleClick={() => {\n                  dispatch(handlerRemoveToWatchList(movieDetails.data.id))\n                  toast.success(\n                    `${movieDetails.data.title} ${intl.messages.removed}`\n                  )\n                }}\n              >\n                <FormattedMessage\n                  id='removeToWatchlist'\n                  defaultMessage='Remove From Watchlist'\n                />\n                <BsHeartFill />\n              </Btn>\n            ) : (\n              <Btn\n                btnClassName='bg-transparent border-0 text-danger'\n                handleClick={() => {\n                  dispatch(handleAddToWatchList(movieDetails.data))\n                  toast.success(\n                    `${movieDetails.data.title} ${intl.messages.added}`\n                  )\n                }}\n              >\n                <FormattedMessage\n                  id='addToWatchlist'\n                  defaultMessage='Add To Watchlist'\n                />\n                <BsHeart />\n              </Btn>\n            )}\n          </div>\n          <h3 className='fs-5 fw-bold'>{movieDetails.data.tagline}</h3>\n          <div className='d-flex justify-content-between'>\n            <div className='d-flex align-items-center flex-row'>\n              <ReactStars\n                count={5}\n                value={movieDetails.data.vote_average / 2}\n                size={24}\n                activeColor='#000'\n              />\n              <p className='ms-3 my-auto'>{movieDetails.data.vote_average}</p>\n            </div>\n\n            <div className='movie-info-date d-flex align-items-center'>\n              {movieDetails.data?.spoken_languages?.map(\n                language => `${language.name.toUpperCase()}/`\n              )}\n              {movieDetails.data.runtime} min/\n              {movieDetails.data.release_date.match(/\\d+/)}\n            </div>\n          </div>\n          <h2 className={`mt-3 fs-5 ${arTextEnd}`}>\n            <FormattedMessage id='movie.genres' defaultMessage='THE GENRES' />\n          </h2>\n          <ul className={`d-flex fs-6 p-0 ${arJustifyEnd}`}>\n            {movieDetails.data.genres.map(g => (\n              <li className='d-flex align-items-center mt-2' key={g.id}>\n                <BsRecordCircleFill className='ms-2' />\n                <p className='m-0 ms-2'>{g.name}</p>\n              </li>\n            ))}\n          </ul>\n          <h2 className={`mt-3 fs-5 ${arTextEnd}`}>\n            <FormattedMessage\n              id='movie.synopsis'\n              defaultMessage='THE SYNOPSIS'\n            />\n          </h2>\n          <p className={`fs-6 fw-lighter ${arTextEnd}`}>\n            {movieDetails.data.overview}\n          </p>\n\n          <h2 className={`mt-3 fs-5 ${arTextEnd}`}>\n            <FormattedMessage id='movie.cast' defaultMessage='THE CAST' />\n          </h2>\n          <div className={`d-flex ${arJustifyEnd}`}>\n            {castDetails &&\n              castDetails.data.cast\n                .filter((c, i) => i < 5)\n                .map(c => (\n                  <img\n                    className='movie-cast-info-img me-4'\n                    src={`https://image.tmdb.org/t/p/w780${c.profile_path}`}\n                    alt={c.name}\n                    key={c.id}\n                  />\n                ))}\n          </div>\n          <div className='d-flex justify-content-between my-4'>\n            <a\n              href={movieDetails.data.homepage}\n              target='_blank'\n              rel='noreferrer'\n            >\n              <Btn btnClassName='btn btn-outline-dark rounded-pill me-0'>\n                <FormattedMessage id='movie.website' defaultMessage='website' />\n                <BsLink45Deg />\n              </Btn>\n            </a>\n\n            <a\n              href={`https://www.imdb.com/title/${movieDetails.data.imdb_id}/?ref_=hm_fanfav_tt_i_1_pd_fp1`}\n              target='_blank'\n              rel='noreferrer'\n            >\n              <Btn btnClassName='btn btn-outline-dark rounded-pill me-0'>\n                imdb <FaImdb />\n              </Btn>\n            </a>\n            <a\n              href={`https://www.imdb.com/title/${movieDetails.data.imdb_id}/?ref_=hm_fanfav_tt_i_1_pd_fp1`}\n              target='_blank'\n              rel='noreferrer'\n            >\n              <Btn btnClassName='btn btn-outline-dark rounded-pill me-0'>\n                <FormattedMessage id='movie.trailer' defaultMessage='trailer' />\n                <FaPlay />\n              </Btn>\n            </a>\n            <Btn\n              btnClassName='btn btn-dark rounded-pill me-0'\n              handleClick={() => navigate(-1)}\n            >\n              <BsArrowLeftShort />\n              <FormattedMessage id='movie.backBtn' defaultMessage='back' />\n            </Btn>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default MovieInfo\n"],"names":["id","useParams","locale","useContext","LocaleContext","intl","useIntl","CallAPi","QueryName","watchers","refetchOnWindowFocus","axios","method","url","movieDetails","data","movieDetailsLoading","isLoading","castDetails","arTextEnd","arJustifyEnd","navigate","useNavigate","watchList","useSelector","state","dispatch","useDispatch","filtered","filter","mov","defaultMessage","className","src","backdrop_path","alt","title","length","btnClassName","handleClick","handlerRemoveToWatchList","toast","messages","removed","handleAddToWatchList","added","tagline","count","value","vote_average","size","activeColor","spoken_languages","map","language","name","toUpperCase","runtime","release_date","match","genres","g","overview","cast","c","i","profile_path","href","homepage","target","rel","imdb_id"],"sourceRoot":""}